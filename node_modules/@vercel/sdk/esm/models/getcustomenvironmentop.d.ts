import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetCustomEnvironmentRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The unique custom environment identifier within the project
     */
    environmentSlugOrId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * Internal representation of a custom environment with all required properties
 */
export type GetCustomEnvironmentResponseBody = {};
/** @internal */
export declare const GetCustomEnvironmentRequest$inboundSchema: z.ZodType<GetCustomEnvironmentRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetCustomEnvironmentRequest$Outbound = {
    idOrName: string;
    environmentSlugOrId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetCustomEnvironmentRequest$outboundSchema: z.ZodType<GetCustomEnvironmentRequest$Outbound, z.ZodTypeDef, GetCustomEnvironmentRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetCustomEnvironmentRequest$ {
    /** @deprecated use `GetCustomEnvironmentRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetCustomEnvironmentRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetCustomEnvironmentRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetCustomEnvironmentRequest$Outbound, z.ZodTypeDef, GetCustomEnvironmentRequest>;
    /** @deprecated use `GetCustomEnvironmentRequest$Outbound` instead. */
    type Outbound = GetCustomEnvironmentRequest$Outbound;
}
export declare function getCustomEnvironmentRequestToJSON(getCustomEnvironmentRequest: GetCustomEnvironmentRequest): string;
export declare function getCustomEnvironmentRequestFromJSON(jsonString: string): SafeParseResult<GetCustomEnvironmentRequest, SDKValidationError>;
/** @internal */
export declare const GetCustomEnvironmentResponseBody$inboundSchema: z.ZodType<GetCustomEnvironmentResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetCustomEnvironmentResponseBody$Outbound = {};
/** @internal */
export declare const GetCustomEnvironmentResponseBody$outboundSchema: z.ZodType<GetCustomEnvironmentResponseBody$Outbound, z.ZodTypeDef, GetCustomEnvironmentResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetCustomEnvironmentResponseBody$ {
    /** @deprecated use `GetCustomEnvironmentResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetCustomEnvironmentResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetCustomEnvironmentResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetCustomEnvironmentResponseBody$Outbound, z.ZodTypeDef, GetCustomEnvironmentResponseBody>;
    /** @deprecated use `GetCustomEnvironmentResponseBody$Outbound` instead. */
    type Outbound = GetCustomEnvironmentResponseBody$Outbound;
}
export declare function getCustomEnvironmentResponseBodyToJSON(getCustomEnvironmentResponseBody: GetCustomEnvironmentResponseBody): string;
export declare function getCustomEnvironmentResponseBodyFromJSON(jsonString: string): SafeParseResult<GetCustomEnvironmentResponseBody, SDKValidationError>;
//# sourceMappingURL=getcustomenvironmentop.d.ts.map
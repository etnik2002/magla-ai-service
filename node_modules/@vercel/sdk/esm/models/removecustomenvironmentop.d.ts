import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type RemoveCustomEnvironmentRequestBody = {
    /**
     * Delete Environment Variables that are not assigned to any environments.
     */
    deleteUnassignedEnvironmentVariables?: boolean | undefined;
};
export type RemoveCustomEnvironmentRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The unique custom environment identifier within the project
     */
    environmentSlugOrId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?: RemoveCustomEnvironmentRequestBody | undefined;
};
export type RemoveCustomEnvironmentResponseBody = {};
/** @internal */
export declare const RemoveCustomEnvironmentRequestBody$inboundSchema: z.ZodType<RemoveCustomEnvironmentRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveCustomEnvironmentRequestBody$Outbound = {
    deleteUnassignedEnvironmentVariables?: boolean | undefined;
};
/** @internal */
export declare const RemoveCustomEnvironmentRequestBody$outboundSchema: z.ZodType<RemoveCustomEnvironmentRequestBody$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveCustomEnvironmentRequestBody$ {
    /** @deprecated use `RemoveCustomEnvironmentRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveCustomEnvironmentRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveCustomEnvironmentRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveCustomEnvironmentRequestBody$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentRequestBody>;
    /** @deprecated use `RemoveCustomEnvironmentRequestBody$Outbound` instead. */
    type Outbound = RemoveCustomEnvironmentRequestBody$Outbound;
}
export declare function removeCustomEnvironmentRequestBodyToJSON(removeCustomEnvironmentRequestBody: RemoveCustomEnvironmentRequestBody): string;
export declare function removeCustomEnvironmentRequestBodyFromJSON(jsonString: string): SafeParseResult<RemoveCustomEnvironmentRequestBody, SDKValidationError>;
/** @internal */
export declare const RemoveCustomEnvironmentRequest$inboundSchema: z.ZodType<RemoveCustomEnvironmentRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveCustomEnvironmentRequest$Outbound = {
    idOrName: string;
    environmentSlugOrId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody?: RemoveCustomEnvironmentRequestBody$Outbound | undefined;
};
/** @internal */
export declare const RemoveCustomEnvironmentRequest$outboundSchema: z.ZodType<RemoveCustomEnvironmentRequest$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveCustomEnvironmentRequest$ {
    /** @deprecated use `RemoveCustomEnvironmentRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveCustomEnvironmentRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveCustomEnvironmentRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveCustomEnvironmentRequest$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentRequest>;
    /** @deprecated use `RemoveCustomEnvironmentRequest$Outbound` instead. */
    type Outbound = RemoveCustomEnvironmentRequest$Outbound;
}
export declare function removeCustomEnvironmentRequestToJSON(removeCustomEnvironmentRequest: RemoveCustomEnvironmentRequest): string;
export declare function removeCustomEnvironmentRequestFromJSON(jsonString: string): SafeParseResult<RemoveCustomEnvironmentRequest, SDKValidationError>;
/** @internal */
export declare const RemoveCustomEnvironmentResponseBody$inboundSchema: z.ZodType<RemoveCustomEnvironmentResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RemoveCustomEnvironmentResponseBody$Outbound = {};
/** @internal */
export declare const RemoveCustomEnvironmentResponseBody$outboundSchema: z.ZodType<RemoveCustomEnvironmentResponseBody$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RemoveCustomEnvironmentResponseBody$ {
    /** @deprecated use `RemoveCustomEnvironmentResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RemoveCustomEnvironmentResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RemoveCustomEnvironmentResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RemoveCustomEnvironmentResponseBody$Outbound, z.ZodTypeDef, RemoveCustomEnvironmentResponseBody>;
    /** @deprecated use `RemoveCustomEnvironmentResponseBody$Outbound` instead. */
    type Outbound = RemoveCustomEnvironmentResponseBody$Outbound;
}
export declare function removeCustomEnvironmentResponseBodyToJSON(removeCustomEnvironmentResponseBody: RemoveCustomEnvironmentResponseBody): string;
export declare function removeCustomEnvironmentResponseBodyFromJSON(jsonString: string): SafeParseResult<RemoveCustomEnvironmentResponseBody, SDKValidationError>;
//# sourceMappingURL=removecustomenvironmentop.d.ts.map
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200Action = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction = {
    Deny: "deny",
    Log: "log",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction = {
    Deny: "deny",
    Log: "log",
};
/**
 * [Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic.
 */
export const GetFirewallConfigType = {
    Host: "host",
    Path: "path",
    Method: "method",
    Header: "header",
    Query: "query",
    Cookie: "cookie",
    TargetPath: "target_path",
    RawPath: "raw_path",
    IpAddress: "ip_address",
    Protocol: "protocol",
    Region: "region",
    Scheme: "scheme",
    Environment: "environment",
    UserAgent: "user_agent",
    GeoContinent: "geo_continent",
    GeoCountry: "geo_country",
    GeoCountryRegion: "geo_country_region",
    GeoCity: "geo_city",
    GeoAsNumber: "geo_as_number",
    Ja4Digest: "ja4_digest",
    Ja3Digest: "ja3_digest",
    RateLimitApiId: "rate_limit_api_id",
};
/**
 * [Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value
 */
export const GetFirewallConfigOp = {
    Re: "re",
    Eq: "eq",
    Ex: "ex",
    Inc: "inc",
    Pre: "pre",
    Suf: "suf",
    Sub: "sub",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
    Nex: "nex",
    Ninc: "ninc",
    Neq: "neq",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction = {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
    Bypass: "bypass",
    RateLimit: "rate_limit",
    Redirect: "redirect",
};
export const GetFirewallConfigAlgo = {
    FixedWindow: "fixed_window",
    TokenBucket: "token_bucket",
};
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction = {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
    RateLimit: "rate_limit",
};
export const GetFirewallConfigSecurityAction = {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
    Bypass: "bypass",
};
export const GetFirewallConfigSecurityResponseAction = {
    Deny: "deny",
    Log: "log",
    Challenge: "challenge",
};
/** @internal */
export const GetFirewallConfigRequest$inboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    configVersion: z.string(),
});
/** @internal */
export const GetFirewallConfigRequest$outboundSchema = z.object({
    projectId: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    configVersion: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigRequest$;
(function (GetFirewallConfigRequest$) {
    /** @deprecated use `GetFirewallConfigRequest$inboundSchema` instead. */
    GetFirewallConfigRequest$.inboundSchema = GetFirewallConfigRequest$inboundSchema;
    /** @deprecated use `GetFirewallConfigRequest$outboundSchema` instead. */
    GetFirewallConfigRequest$.outboundSchema = GetFirewallConfigRequest$outboundSchema;
})(GetFirewallConfigRequest$ || (GetFirewallConfigRequest$ = {}));
export function getFirewallConfigRequestToJSON(getFirewallConfigRequest) {
    return JSON.stringify(GetFirewallConfigRequest$outboundSchema.parse(getFirewallConfigRequest));
}
export function getFirewallConfigRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigRequest' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$ = {}));
/** @internal */
export const Sd$inboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$inboundSchema,
});
/** @internal */
export const Sd$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSdAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Sd$;
(function (Sd$) {
    /** @deprecated use `Sd$inboundSchema` instead. */
    Sd$.inboundSchema = Sd$inboundSchema;
    /** @deprecated use `Sd$outboundSchema` instead. */
    Sd$.outboundSchema = Sd$outboundSchema;
})(Sd$ || (Sd$ = {}));
export function sdToJSON(sd) {
    return JSON.stringify(Sd$outboundSchema.parse(sd));
}
export function sdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Sd$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Sd' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$ = {}));
/** @internal */
export const Ma$inboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$inboundSchema,
});
/** @internal */
export const Ma$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsMaAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Ma$;
(function (Ma$) {
    /** @deprecated use `Ma$inboundSchema` instead. */
    Ma$.inboundSchema = Ma$inboundSchema;
    /** @deprecated use `Ma$outboundSchema` instead. */
    Ma$.outboundSchema = Ma$outboundSchema;
})(Ma$ || (Ma$ = {}));
export function maToJSON(ma) {
    return JSON.stringify(Ma$outboundSchema.parse(ma));
}
export function maFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Ma$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Ma' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$ = {}));
/** @internal */
export const Lfi$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$inboundSchema,
});
/** @internal */
export const Lfi$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsLfiAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Lfi$;
(function (Lfi$) {
    /** @deprecated use `Lfi$inboundSchema` instead. */
    Lfi$.inboundSchema = Lfi$inboundSchema;
    /** @deprecated use `Lfi$outboundSchema` instead. */
    Lfi$.outboundSchema = Lfi$outboundSchema;
})(Lfi$ || (Lfi$ = {}));
export function lfiToJSON(lfi) {
    return JSON.stringify(Lfi$outboundSchema.parse(lfi));
}
export function lfiFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Lfi$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Lfi' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200Action$inboundSchema = z
    .nativeEnum(GetFirewallConfigSecurityResponse200Action);
/** @internal */
export const GetFirewallConfigSecurityResponse200Action$outboundSchema = GetFirewallConfigSecurityResponse200Action$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200Action$;
(function (GetFirewallConfigSecurityResponse200Action$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200Action$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200Action$.inboundSchema = GetFirewallConfigSecurityResponse200Action$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200Action$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200Action$.outboundSchema = GetFirewallConfigSecurityResponse200Action$outboundSchema;
})(GetFirewallConfigSecurityResponse200Action$ || (GetFirewallConfigSecurityResponse200Action$ = {}));
/** @internal */
export const Rfi$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200Action$inboundSchema,
});
/** @internal */
export const Rfi$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200Action$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Rfi$;
(function (Rfi$) {
    /** @deprecated use `Rfi$inboundSchema` instead. */
    Rfi$.inboundSchema = Rfi$inboundSchema;
    /** @deprecated use `Rfi$outboundSchema` instead. */
    Rfi$.outboundSchema = Rfi$outboundSchema;
})(Rfi$ || (Rfi$ = {}));
export function rfiToJSON(rfi) {
    return JSON.stringify(Rfi$outboundSchema.parse(rfi));
}
export function rfiFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Rfi$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Rfi' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONAction$ = {}));
/** @internal */
export const Rce$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONAction$inboundSchema,
});
/** @internal */
export const Rce$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Rce$;
(function (Rce$) {
    /** @deprecated use `Rce$inboundSchema` instead. */
    Rce$.inboundSchema = Rce$inboundSchema;
    /** @deprecated use `Rce$outboundSchema` instead. */
    Rce$.outboundSchema = Rce$outboundSchema;
})(Rce$ || (Rce$ = {}));
export function rceToJSON(rce) {
    return JSON.stringify(Rce$outboundSchema.parse(rce));
}
export function rceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Rce$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Rce' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$ = {}));
/** @internal */
export const Php$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$inboundSchema,
});
/** @internal */
export const Php$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Php$;
(function (Php$) {
    /** @deprecated use `Php$inboundSchema` instead. */
    Php$.inboundSchema = Php$inboundSchema;
    /** @deprecated use `Php$outboundSchema` instead. */
    Php$.outboundSchema = Php$outboundSchema;
})(Php$ || (Php$ = {}));
export function phpToJSON(php) {
    return JSON.stringify(Php$outboundSchema.parse(php));
}
export function phpFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Php$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Php' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$ = {}));
/** @internal */
export const Gen$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$inboundSchema,
});
/** @internal */
export const Gen$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Gen$;
(function (Gen$) {
    /** @deprecated use `Gen$inboundSchema` instead. */
    Gen$.inboundSchema = Gen$inboundSchema;
    /** @deprecated use `Gen$outboundSchema` instead. */
    Gen$.outboundSchema = Gen$outboundSchema;
})(Gen$ || (Gen$ = {}));
export function genToJSON(gen) {
    return JSON.stringify(Gen$outboundSchema.parse(gen));
}
export function genFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Gen$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Gen' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$ = {}));
/** @internal */
export const Xss$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$inboundSchema,
});
/** @internal */
export const Xss$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsXssAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Xss$;
(function (Xss$) {
    /** @deprecated use `Xss$inboundSchema` instead. */
    Xss$.inboundSchema = Xss$inboundSchema;
    /** @deprecated use `Xss$outboundSchema` instead. */
    Xss$.outboundSchema = Xss$outboundSchema;
})(Xss$ || (Xss$ = {}));
export function xssToJSON(xss) {
    return JSON.stringify(Xss$outboundSchema.parse(xss));
}
export function xssFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Xss$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Xss' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$ = {}));
/** @internal */
export const Sqli$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$inboundSchema,
});
/** @internal */
export const Sqli$outboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSqliAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Sqli$;
(function (Sqli$) {
    /** @deprecated use `Sqli$inboundSchema` instead. */
    Sqli$.inboundSchema = Sqli$inboundSchema;
    /** @deprecated use `Sqli$outboundSchema` instead. */
    Sqli$.outboundSchema = Sqli$outboundSchema;
})(Sqli$ || (Sqli$ = {}));
export function sqliToJSON(sqli) {
    return JSON.stringify(Sqli$outboundSchema.parse(sqli));
}
export function sqliFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Sqli$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Sqli' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$ = {}));
/** @internal */
export const Sf$inboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$inboundSchema,
});
/** @internal */
export const Sf$outboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsSfAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Sf$;
(function (Sf$) {
    /** @deprecated use `Sf$inboundSchema` instead. */
    Sf$.inboundSchema = Sf$inboundSchema;
    /** @deprecated use `Sf$outboundSchema` instead. */
    Sf$.outboundSchema = Sf$outboundSchema;
})(Sf$ || (Sf$ = {}));
export function sfToJSON(sf) {
    return JSON.stringify(Sf$outboundSchema.parse(sf));
}
export function sfFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Sf$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Sf' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$ = {}));
/** @internal */
export const Java$inboundSchema = z
    .object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$inboundSchema,
});
/** @internal */
export const Java$outboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyCrsJavaAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Java$;
(function (Java$) {
    /** @deprecated use `Java$inboundSchema` instead. */
    Java$.inboundSchema = Java$inboundSchema;
    /** @deprecated use `Java$outboundSchema` instead. */
    Java$.outboundSchema = Java$outboundSchema;
})(Java$ || (Java$ = {}));
export function javaToJSON(java) {
    return JSON.stringify(Java$outboundSchema.parse(java));
}
export function javaFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Java$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Java' from JSON`);
}
/** @internal */
export const Crs$inboundSchema = z
    .object({
    sd: z.lazy(() => Sd$inboundSchema),
    ma: z.lazy(() => Ma$inboundSchema),
    lfi: z.lazy(() => Lfi$inboundSchema),
    rfi: z.lazy(() => Rfi$inboundSchema),
    rce: z.lazy(() => Rce$inboundSchema),
    php: z.lazy(() => Php$inboundSchema),
    gen: z.lazy(() => Gen$inboundSchema),
    xss: z.lazy(() => Xss$inboundSchema),
    sqli: z.lazy(() => Sqli$inboundSchema),
    sf: z.lazy(() => Sf$inboundSchema),
    java: z.lazy(() => Java$inboundSchema),
});
/** @internal */
export const Crs$outboundSchema = z
    .object({
    sd: z.lazy(() => Sd$outboundSchema),
    ma: z.lazy(() => Ma$outboundSchema),
    lfi: z.lazy(() => Lfi$outboundSchema),
    rfi: z.lazy(() => Rfi$outboundSchema),
    rce: z.lazy(() => Rce$outboundSchema),
    php: z.lazy(() => Php$outboundSchema),
    gen: z.lazy(() => Gen$outboundSchema),
    xss: z.lazy(() => Xss$outboundSchema),
    sqli: z.lazy(() => Sqli$outboundSchema),
    sf: z.lazy(() => Sf$outboundSchema),
    java: z.lazy(() => Java$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Crs$;
(function (Crs$) {
    /** @deprecated use `Crs$inboundSchema` instead. */
    Crs$.inboundSchema = Crs$inboundSchema;
    /** @deprecated use `Crs$outboundSchema` instead. */
    Crs$.outboundSchema = Crs$outboundSchema;
})(Crs$ || (Crs$ = {}));
export function crsToJSON(crs) {
    return JSON.stringify(Crs$outboundSchema.parse(crs));
}
export function crsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Crs$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Crs' from JSON`);
}
/** @internal */
export const GetFirewallConfigType$inboundSchema = z.nativeEnum(GetFirewallConfigType);
/** @internal */
export const GetFirewallConfigType$outboundSchema = GetFirewallConfigType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigType$;
(function (GetFirewallConfigType$) {
    /** @deprecated use `GetFirewallConfigType$inboundSchema` instead. */
    GetFirewallConfigType$.inboundSchema = GetFirewallConfigType$inboundSchema;
    /** @deprecated use `GetFirewallConfigType$outboundSchema` instead. */
    GetFirewallConfigType$.outboundSchema = GetFirewallConfigType$outboundSchema;
})(GetFirewallConfigType$ || (GetFirewallConfigType$ = {}));
/** @internal */
export const GetFirewallConfigOp$inboundSchema = z.nativeEnum(GetFirewallConfigOp);
/** @internal */
export const GetFirewallConfigOp$outboundSchema = GetFirewallConfigOp$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigOp$;
(function (GetFirewallConfigOp$) {
    /** @deprecated use `GetFirewallConfigOp$inboundSchema` instead. */
    GetFirewallConfigOp$.inboundSchema = GetFirewallConfigOp$inboundSchema;
    /** @deprecated use `GetFirewallConfigOp$outboundSchema` instead. */
    GetFirewallConfigOp$.outboundSchema = GetFirewallConfigOp$outboundSchema;
})(GetFirewallConfigOp$ || (GetFirewallConfigOp$ = {}));
/** @internal */
export const GetFirewallConfigValue$inboundSchema = z.union([z.string(), z.number(), z.array(z.string())]);
/** @internal */
export const GetFirewallConfigValue$outboundSchema = z.union([z.string(), z.number(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigValue$;
(function (GetFirewallConfigValue$) {
    /** @deprecated use `GetFirewallConfigValue$inboundSchema` instead. */
    GetFirewallConfigValue$.inboundSchema = GetFirewallConfigValue$inboundSchema;
    /** @deprecated use `GetFirewallConfigValue$outboundSchema` instead. */
    GetFirewallConfigValue$.outboundSchema = GetFirewallConfigValue$outboundSchema;
})(GetFirewallConfigValue$ || (GetFirewallConfigValue$ = {}));
export function getFirewallConfigValueToJSON(getFirewallConfigValue) {
    return JSON.stringify(GetFirewallConfigValue$outboundSchema.parse(getFirewallConfigValue));
}
export function getFirewallConfigValueFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigValue$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigValue' from JSON`);
}
/** @internal */
export const GetFirewallConfigConditions$inboundSchema = z.object({
    type: GetFirewallConfigType$inboundSchema,
    op: GetFirewallConfigOp$inboundSchema,
    neg: z.boolean().optional(),
    key: z.string().optional(),
    value: z.union([z.string(), z.number(), z.array(z.string())]).optional(),
});
/** @internal */
export const GetFirewallConfigConditions$outboundSchema = z.object({
    type: GetFirewallConfigType$outboundSchema,
    op: GetFirewallConfigOp$outboundSchema,
    neg: z.boolean().optional(),
    key: z.string().optional(),
    value: z.union([z.string(), z.number(), z.array(z.string())]).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigConditions$;
(function (GetFirewallConfigConditions$) {
    /** @deprecated use `GetFirewallConfigConditions$inboundSchema` instead. */
    GetFirewallConfigConditions$.inboundSchema = GetFirewallConfigConditions$inboundSchema;
    /** @deprecated use `GetFirewallConfigConditions$outboundSchema` instead. */
    GetFirewallConfigConditions$.outboundSchema = GetFirewallConfigConditions$outboundSchema;
})(GetFirewallConfigConditions$ || (GetFirewallConfigConditions$ = {}));
export function getFirewallConfigConditionsToJSON(getFirewallConfigConditions) {
    return JSON.stringify(GetFirewallConfigConditions$outboundSchema.parse(getFirewallConfigConditions));
}
export function getFirewallConfigConditionsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigConditions$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigConditions' from JSON`);
}
/** @internal */
export const GetFirewallConfigConditionGroup$inboundSchema = z.object({
    conditions: z.array(z.lazy(() => GetFirewallConfigConditions$inboundSchema)),
});
/** @internal */
export const GetFirewallConfigConditionGroup$outboundSchema = z.object({
    conditions: z.array(z.lazy(() => GetFirewallConfigConditions$outboundSchema)),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigConditionGroup$;
(function (GetFirewallConfigConditionGroup$) {
    /** @deprecated use `GetFirewallConfigConditionGroup$inboundSchema` instead. */
    GetFirewallConfigConditionGroup$.inboundSchema = GetFirewallConfigConditionGroup$inboundSchema;
    /** @deprecated use `GetFirewallConfigConditionGroup$outboundSchema` instead. */
    GetFirewallConfigConditionGroup$.outboundSchema = GetFirewallConfigConditionGroup$outboundSchema;
})(GetFirewallConfigConditionGroup$ || (GetFirewallConfigConditionGroup$ = {}));
export function getFirewallConfigConditionGroupToJSON(getFirewallConfigConditionGroup) {
    return JSON.stringify(GetFirewallConfigConditionGroup$outboundSchema.parse(getFirewallConfigConditionGroup));
}
export function getFirewallConfigConditionGroupFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigConditionGroup$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigConditionGroup' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$ = {}));
/** @internal */
export const GetFirewallConfigAlgo$inboundSchema = z.nativeEnum(GetFirewallConfigAlgo);
/** @internal */
export const GetFirewallConfigAlgo$outboundSchema = GetFirewallConfigAlgo$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigAlgo$;
(function (GetFirewallConfigAlgo$) {
    /** @deprecated use `GetFirewallConfigAlgo$inboundSchema` instead. */
    GetFirewallConfigAlgo$.inboundSchema = GetFirewallConfigAlgo$inboundSchema;
    /** @deprecated use `GetFirewallConfigAlgo$outboundSchema` instead. */
    GetFirewallConfigAlgo$.outboundSchema = GetFirewallConfigAlgo$outboundSchema;
})(GetFirewallConfigAlgo$ || (GetFirewallConfigAlgo$ = {}));
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction);
/** @internal */
export const GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$;
(function (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$.inboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$.outboundSchema = GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema;
})(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$ || (GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$ = {}));
/** @internal */
export const GetFirewallConfigRateLimit$inboundSchema = z.object({
    algo: GetFirewallConfigAlgo$inboundSchema,
    window: z.number(),
    limit: z.number(),
    keys: z.array(z.string()),
    action: z.nullable(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$inboundSchema).optional(),
});
/** @internal */
export const GetFirewallConfigRateLimit$outboundSchema = z.object({
    algo: GetFirewallConfigAlgo$outboundSchema,
    window: z.number(),
    limit: z.number(),
    keys: z.array(z.string()),
    action: z.nullable(GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesActionAction$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigRateLimit$;
(function (GetFirewallConfigRateLimit$) {
    /** @deprecated use `GetFirewallConfigRateLimit$inboundSchema` instead. */
    GetFirewallConfigRateLimit$.inboundSchema = GetFirewallConfigRateLimit$inboundSchema;
    /** @deprecated use `GetFirewallConfigRateLimit$outboundSchema` instead. */
    GetFirewallConfigRateLimit$.outboundSchema = GetFirewallConfigRateLimit$outboundSchema;
})(GetFirewallConfigRateLimit$ || (GetFirewallConfigRateLimit$ = {}));
export function getFirewallConfigRateLimitToJSON(getFirewallConfigRateLimit) {
    return JSON.stringify(GetFirewallConfigRateLimit$outboundSchema.parse(getFirewallConfigRateLimit));
}
export function getFirewallConfigRateLimitFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigRateLimit$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigRateLimit' from JSON`);
}
/** @internal */
export const GetFirewallConfigRedirect$inboundSchema = z.object({
    location: z.string(),
    permanent: z.boolean(),
});
/** @internal */
export const GetFirewallConfigRedirect$outboundSchema = z.object({
    location: z.string(),
    permanent: z.boolean(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigRedirect$;
(function (GetFirewallConfigRedirect$) {
    /** @deprecated use `GetFirewallConfigRedirect$inboundSchema` instead. */
    GetFirewallConfigRedirect$.inboundSchema = GetFirewallConfigRedirect$inboundSchema;
    /** @deprecated use `GetFirewallConfigRedirect$outboundSchema` instead. */
    GetFirewallConfigRedirect$.outboundSchema = GetFirewallConfigRedirect$outboundSchema;
})(GetFirewallConfigRedirect$ || (GetFirewallConfigRedirect$ = {}));
export function getFirewallConfigRedirectToJSON(getFirewallConfigRedirect) {
    return JSON.stringify(GetFirewallConfigRedirect$outboundSchema.parse(getFirewallConfigRedirect));
}
export function getFirewallConfigRedirectFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigRedirect$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigRedirect' from JSON`);
}
/** @internal */
export const GetFirewallConfigMitigate$inboundSchema = z.object({
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$inboundSchema,
    rateLimit: z.nullable(z.lazy(() => GetFirewallConfigRateLimit$inboundSchema))
        .optional(),
    redirect: z.nullable(z.lazy(() => GetFirewallConfigRedirect$inboundSchema))
        .optional(),
    actionDuration: z.nullable(z.string()).optional(),
    bypassSystem: z.nullable(z.boolean()).optional(),
});
/** @internal */
export const GetFirewallConfigMitigate$outboundSchema = z.object({
    action: GetFirewallConfigSecurityResponse200ApplicationJSONResponseBodyRulesAction$outboundSchema,
    rateLimit: z.nullable(z.lazy(() => GetFirewallConfigRateLimit$outboundSchema))
        .optional(),
    redirect: z.nullable(z.lazy(() => GetFirewallConfigRedirect$outboundSchema))
        .optional(),
    actionDuration: z.nullable(z.string()).optional(),
    bypassSystem: z.nullable(z.boolean()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigMitigate$;
(function (GetFirewallConfigMitigate$) {
    /** @deprecated use `GetFirewallConfigMitigate$inboundSchema` instead. */
    GetFirewallConfigMitigate$.inboundSchema = GetFirewallConfigMitigate$inboundSchema;
    /** @deprecated use `GetFirewallConfigMitigate$outboundSchema` instead. */
    GetFirewallConfigMitigate$.outboundSchema = GetFirewallConfigMitigate$outboundSchema;
})(GetFirewallConfigMitigate$ || (GetFirewallConfigMitigate$ = {}));
export function getFirewallConfigMitigateToJSON(getFirewallConfigMitigate) {
    return JSON.stringify(GetFirewallConfigMitigate$outboundSchema.parse(getFirewallConfigMitigate));
}
export function getFirewallConfigMitigateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigMitigate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigMitigate' from JSON`);
}
/** @internal */
export const GetFirewallConfigAction$inboundSchema = z.object({
    mitigate: z.lazy(() => GetFirewallConfigMitigate$inboundSchema).optional(),
});
/** @internal */
export const GetFirewallConfigAction$outboundSchema = z.object({
    mitigate: z.lazy(() => GetFirewallConfigMitigate$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigAction$;
(function (GetFirewallConfigAction$) {
    /** @deprecated use `GetFirewallConfigAction$inboundSchema` instead. */
    GetFirewallConfigAction$.inboundSchema = GetFirewallConfigAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigAction$outboundSchema` instead. */
    GetFirewallConfigAction$.outboundSchema = GetFirewallConfigAction$outboundSchema;
})(GetFirewallConfigAction$ || (GetFirewallConfigAction$ = {}));
export function getFirewallConfigActionToJSON(getFirewallConfigAction) {
    return JSON.stringify(GetFirewallConfigAction$outboundSchema.parse(getFirewallConfigAction));
}
export function getFirewallConfigActionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigAction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigAction' from JSON`);
}
/** @internal */
export const GetFirewallConfigRules$inboundSchema = z.object({
    id: z.string(),
    name: z.string(),
    description: z.string().optional(),
    active: z.boolean(),
    conditionGroup: z.array(z.lazy(() => GetFirewallConfigConditionGroup$inboundSchema)),
    action: z.lazy(() => GetFirewallConfigAction$inboundSchema),
});
/** @internal */
export const GetFirewallConfigRules$outboundSchema = z.object({
    id: z.string(),
    name: z.string(),
    description: z.string().optional(),
    active: z.boolean(),
    conditionGroup: z.array(z.lazy(() => GetFirewallConfigConditionGroup$outboundSchema)),
    action: z.lazy(() => GetFirewallConfigAction$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigRules$;
(function (GetFirewallConfigRules$) {
    /** @deprecated use `GetFirewallConfigRules$inboundSchema` instead. */
    GetFirewallConfigRules$.inboundSchema = GetFirewallConfigRules$inboundSchema;
    /** @deprecated use `GetFirewallConfigRules$outboundSchema` instead. */
    GetFirewallConfigRules$.outboundSchema = GetFirewallConfigRules$outboundSchema;
})(GetFirewallConfigRules$ || (GetFirewallConfigRules$ = {}));
export function getFirewallConfigRulesToJSON(getFirewallConfigRules) {
    return JSON.stringify(GetFirewallConfigRules$outboundSchema.parse(getFirewallConfigRules));
}
export function getFirewallConfigRulesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigRules$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigRules' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityAction$inboundSchema = z.nativeEnum(GetFirewallConfigSecurityAction);
/** @internal */
export const GetFirewallConfigSecurityAction$outboundSchema = GetFirewallConfigSecurityAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityAction$;
(function (GetFirewallConfigSecurityAction$) {
    /** @deprecated use `GetFirewallConfigSecurityAction$inboundSchema` instead. */
    GetFirewallConfigSecurityAction$.inboundSchema = GetFirewallConfigSecurityAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityAction$outboundSchema` instead. */
    GetFirewallConfigSecurityAction$.outboundSchema = GetFirewallConfigSecurityAction$outboundSchema;
})(GetFirewallConfigSecurityAction$ || (GetFirewallConfigSecurityAction$ = {}));
/** @internal */
export const Ips$inboundSchema = z
    .object({
    id: z.string(),
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action: GetFirewallConfigSecurityAction$inboundSchema,
});
/** @internal */
export const Ips$outboundSchema = z
    .object({
    id: z.string(),
    hostname: z.string(),
    ip: z.string(),
    notes: z.string().optional(),
    action: GetFirewallConfigSecurityAction$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Ips$;
(function (Ips$) {
    /** @deprecated use `Ips$inboundSchema` instead. */
    Ips$.inboundSchema = Ips$inboundSchema;
    /** @deprecated use `Ips$outboundSchema` instead. */
    Ips$.outboundSchema = Ips$outboundSchema;
})(Ips$ || (Ips$ = {}));
export function ipsToJSON(ips) {
    return JSON.stringify(Ips$outboundSchema.parse(ips));
}
export function ipsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Ips$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Ips' from JSON`);
}
/** @internal */
export const Changes$inboundSchema = z.object({});
/** @internal */
export const Changes$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Changes$;
(function (Changes$) {
    /** @deprecated use `Changes$inboundSchema` instead. */
    Changes$.inboundSchema = Changes$inboundSchema;
    /** @deprecated use `Changes$outboundSchema` instead. */
    Changes$.outboundSchema = Changes$outboundSchema;
})(Changes$ || (Changes$ = {}));
export function changesToJSON(changes) {
    return JSON.stringify(Changes$outboundSchema.parse(changes));
}
export function changesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Changes$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Changes' from JSON`);
}
/** @internal */
export const GetFirewallConfigSecurityResponseAction$inboundSchema = z
    .nativeEnum(GetFirewallConfigSecurityResponseAction);
/** @internal */
export const GetFirewallConfigSecurityResponseAction$outboundSchema = GetFirewallConfigSecurityResponseAction$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigSecurityResponseAction$;
(function (GetFirewallConfigSecurityResponseAction$) {
    /** @deprecated use `GetFirewallConfigSecurityResponseAction$inboundSchema` instead. */
    GetFirewallConfigSecurityResponseAction$.inboundSchema = GetFirewallConfigSecurityResponseAction$inboundSchema;
    /** @deprecated use `GetFirewallConfigSecurityResponseAction$outboundSchema` instead. */
    GetFirewallConfigSecurityResponseAction$.outboundSchema = GetFirewallConfigSecurityResponseAction$outboundSchema;
})(GetFirewallConfigSecurityResponseAction$ || (GetFirewallConfigSecurityResponseAction$ = {}));
/** @internal */
export const ManagedRules$inboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponseAction$inboundSchema.optional(),
    updatedAt: z.string().optional(),
    userId: z.string().optional(),
    username: z.string().optional(),
});
/** @internal */
export const ManagedRules$outboundSchema = z.object({
    active: z.boolean(),
    action: GetFirewallConfigSecurityResponseAction$outboundSchema.optional(),
    updatedAt: z.string().optional(),
    userId: z.string().optional(),
    username: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ManagedRules$;
(function (ManagedRules$) {
    /** @deprecated use `ManagedRules$inboundSchema` instead. */
    ManagedRules$.inboundSchema = ManagedRules$inboundSchema;
    /** @deprecated use `ManagedRules$outboundSchema` instead. */
    ManagedRules$.outboundSchema = ManagedRules$outboundSchema;
})(ManagedRules$ || (ManagedRules$ = {}));
export function managedRulesToJSON(managedRules) {
    return JSON.stringify(ManagedRules$outboundSchema.parse(managedRules));
}
export function managedRulesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ManagedRules$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ManagedRules' from JSON`);
}
/** @internal */
export const GetFirewallConfigResponseBody$inboundSchema = z.object({
    ownerId: z.string(),
    projectKey: z.string(),
    id: z.string(),
    version: z.number(),
    updatedAt: z.string(),
    firewallEnabled: z.boolean(),
    crs: z.lazy(() => Crs$inboundSchema),
    rules: z.array(z.lazy(() => GetFirewallConfigRules$inboundSchema)),
    ips: z.array(z.lazy(() => Ips$inboundSchema)),
    changes: z.array(z.lazy(() => Changes$inboundSchema)),
    managedRules: z.record(z.lazy(() => ManagedRules$inboundSchema)).optional(),
});
/** @internal */
export const GetFirewallConfigResponseBody$outboundSchema = z.object({
    ownerId: z.string(),
    projectKey: z.string(),
    id: z.string(),
    version: z.number(),
    updatedAt: z.string(),
    firewallEnabled: z.boolean(),
    crs: z.lazy(() => Crs$outboundSchema),
    rules: z.array(z.lazy(() => GetFirewallConfigRules$outboundSchema)),
    ips: z.array(z.lazy(() => Ips$outboundSchema)),
    changes: z.array(z.lazy(() => Changes$outboundSchema)),
    managedRules: z.record(z.lazy(() => ManagedRules$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetFirewallConfigResponseBody$;
(function (GetFirewallConfigResponseBody$) {
    /** @deprecated use `GetFirewallConfigResponseBody$inboundSchema` instead. */
    GetFirewallConfigResponseBody$.inboundSchema = GetFirewallConfigResponseBody$inboundSchema;
    /** @deprecated use `GetFirewallConfigResponseBody$outboundSchema` instead. */
    GetFirewallConfigResponseBody$.outboundSchema = GetFirewallConfigResponseBody$outboundSchema;
})(GetFirewallConfigResponseBody$ || (GetFirewallConfigResponseBody$ = {}));
export function getFirewallConfigResponseBodyToJSON(getFirewallConfigResponseBody) {
    return JSON.stringify(GetFirewallConfigResponseBody$outboundSchema.parse(getFirewallConfigResponseBody));
}
export function getFirewallConfigResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetFirewallConfigResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetFirewallConfigResponseBody' from JSON`);
}
//# sourceMappingURL=getfirewallconfigop.js.map
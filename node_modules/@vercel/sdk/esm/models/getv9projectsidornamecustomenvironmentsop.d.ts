import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetV9ProjectsIdOrNameCustomEnvironmentsRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * Fetch custom environments for a specific git branch
     */
    gitBranch?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * Internal representation of a custom environment with all required properties
 */
export type GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments = {};
export type GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody = {
    environments: Array<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments>;
};
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV9ProjectsIdOrNameCustomEnvironmentsRequest$Outbound = {
    idOrName: string;
    gitBranch?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsRequest$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV9ProjectsIdOrNameCustomEnvironmentsRequest$ {
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsRequest$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsRequest>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsRequest$Outbound` instead. */
    type Outbound = GetV9ProjectsIdOrNameCustomEnvironmentsRequest$Outbound;
}
export declare function getV9ProjectsIdOrNameCustomEnvironmentsRequestToJSON(getV9ProjectsIdOrNameCustomEnvironmentsRequest: GetV9ProjectsIdOrNameCustomEnvironmentsRequest): string;
export declare function getV9ProjectsIdOrNameCustomEnvironmentsRequestFromJSON(jsonString: string): SafeParseResult<GetV9ProjectsIdOrNameCustomEnvironmentsRequest, SDKValidationError>;
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound = {};
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$ {
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound` instead. */
    type Outbound = GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound;
}
export declare function getV9ProjectsIdOrNameCustomEnvironmentsEnvironmentsToJSON(getV9ProjectsIdOrNameCustomEnvironmentsEnvironments: GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments): string;
export declare function getV9ProjectsIdOrNameCustomEnvironmentsEnvironmentsFromJSON(jsonString: string): SafeParseResult<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments, SDKValidationError>;
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound = {
    environments: Array<GetV9ProjectsIdOrNameCustomEnvironmentsEnvironments$Outbound>;
};
/** @internal */
export declare const GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$ {
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound, z.ZodTypeDef, GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody>;
    /** @deprecated use `GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound` instead. */
    type Outbound = GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound;
}
export declare function getV9ProjectsIdOrNameCustomEnvironmentsResponseBodyToJSON(getV9ProjectsIdOrNameCustomEnvironmentsResponseBody: GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody): string;
export declare function getV9ProjectsIdOrNameCustomEnvironmentsResponseBodyFromJSON(jsonString: string): SafeParseResult<GetV9ProjectsIdOrNameCustomEnvironmentsResponseBody, SDKValidationError>;
//# sourceMappingURL=getv9projectsidornamecustomenvironmentsop.d.ts.map